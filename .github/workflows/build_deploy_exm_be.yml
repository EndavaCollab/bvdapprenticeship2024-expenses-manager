name: Build and Deploy EXM BE

on:
  push:
    branches:
      - main
    paths:
      - 'expenses-manager-backend/**'
      - '.github/workflows/build_deploy_exm_be.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'expenses-manager-backend/**'
      - '.github/workflows/build_deploy_exm_be.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install Maven
      run: sudo apt-get update && sudo apt-get install maven -y

    - name: Build Backend Application
      run: |
        mvn clean install
      env:
        BE_BASE_URL: ${{ secrets.BE_BASE_URL }}
        DB_URL: ${{ secrets.DB_URL }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      working-directory: expenses-manager-backend

    - name: Upload build artifacts
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: expenses-manager-backend/target/*.jar

  deploy:
    name: Deploy to VM
    runs-on: ubuntu-latest
    needs: build
    environment: deploy
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: ./backend-build

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
       client-id: ${{ secrets.AZURE_CLIENT_ID }}
       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get VM Public IP
      id: get-vm-ip
      run: |
        echo "vm_ip=$(az vm list-ip-addresses --name ${{ secrets.EXM_VM_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} --query "[0].virtualMachine.network.publicIpAddresses[0].ipAddress" -o tsv)" >> $GITHUB_OUTPUT

    - name: Create SSH private key file
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
        chmod 600 ssh_key

    - name: Verify /home/admin directory and create if missing
      run: |
        ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.ADMIN_USERNAME }}@${{ steps.get-vm-ip.outputs.vm_ip }} <<EOF
        sudo mkdir -p /home/admin
        sudo chown ${{ secrets.ADMIN_USERNAME }}:${{ secrets.ADMIN_USERNAME }} /home/admin
        EOF

    - name: Install Java JDK on VM
      run: |
        ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.ADMIN_USERNAME }}@${{ steps.get-vm-ip.outputs.vm_ip }} <<EOF
          sudo apt-get update
          sudo apt-get install openjdk-17-jdk -y
        EOF

    - name: Copy Artifact to VM
      run: |
       scp -i ssh_key -o StrictHostKeyChecking=no backend-build/*.jar ${{ secrets.ADMIN_USERNAME }}@${{ steps.get-vm-ip.outputs.vm_ip }}:/home/admin/expenses-manager-backend.jar

    - name: Run Backend Application
      run: |
        ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.ADMIN_USERNAME }}@${{ steps.get-vm-ip.outputs.vm_ip }} <<EOF
          export DB_URL=${{ secrets.DB_URL }}
          export DB_USERNAME=${{ secrets.DB_USERNAME }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export BE_BASE_URL=${{ secrets.BE_BASE_URL }}
          nohup java -jar /home/admin/expenses-manager-backend.jar --spring.profiles.active=dev &
        EOF

    - name: Remove SSH private key file
      run: rm ssh_key
