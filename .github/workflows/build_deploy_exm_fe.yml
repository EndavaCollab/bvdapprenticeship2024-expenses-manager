name: Build and Deploy EXM FE

on:
  push:
    branches:
      - main
    paths:
      - 'expenses-manager-frontend/**'
      - '.github/workflows/build_deploy_exm_fe.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'expenses-manager-frontend/**'
      - '.github/workflows/build_deploy_exm_fe.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build Angular Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download and install Maven
      run: sudo apt-get update && sudo apt-get install -y maven

    - name: Build Angular application using Maven
      run: |
         mvn clean install -DBE_BASE_URL=${{ secrets.BE_BASE_URL }}
      working-directory: expenses-manager-frontend

    - name: Upload build artifacts
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: expenses-manager-frontend/target/frontend

  deploy:
    name: Deploy to VM
    runs-on: ubuntu-latest
    needs: build
    environment: deploy
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-build 
        path: ./frontend-build
        
    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get VM Public IP
      id: get-vm-ip
      run: |
        echo "vm_ip=$(az vm list-ip-addresses --name ${{ secrets.EXM_VM_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} --query "[0].virtualMachine.network.publicIpAddresses[0].ipAddress" -o tsv)" >> $GITHUB_OUTPUT

    - name: Create SSH private key file
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
        chmod 600 ssh_key


    - name: Copy build files to VM
      run: |
        scp -i ssh_key -o StrictHostKeyChecking=no -r frontend-build/* ${{ secrets.ADMIN_USERNAME }}@${{ steps.get-vm-ip.outputs.vm_ip }}:/tmp/frontend/


    - name: SSH into VM, move build files, and restart Nginx
      run: | 
        ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.ADMIN_USERNAME }}@${{ steps.get-vm-ip.outputs.vm_ip }} <<EOF
        sudo apt-get update
        sudo apt-get install nginx -y
        sudo systemctl start nginx
        sudo systemctl enable nginx
        
        sudo rm -rf /var/www/html
        sudo mkdir -p /var/www/html
        sudo mv /tmp/frontend/* /var/www/html/
        
        sudo chown -R www-data:www-data /var/www/html/
        
        sudo systemctl restart nginx 
        EOF

    - name: Remove SSH private key file
      run: rm ssh_key
